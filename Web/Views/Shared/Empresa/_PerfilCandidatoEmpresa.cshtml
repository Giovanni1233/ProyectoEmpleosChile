<style>
    #myTab li a {
        color: #000;
    }
</style>
@if (ViewBag.ReferenciaDatosUsuario != null)
{
    foreach (var item in ViewBag.ReferenciaDatosUsuario as ICollection<Model.Models.PerfilCandidatoPostulacion>)
    {
        <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex flex-column align-items-center text-center">
                            @if (ViewBag.referenciaImagenPerfil.Count > 0)
                            {
                                foreach (var item2 in ViewBag.referenciaImagenPerfil as ICollection<Model.Models.ImagenUsuarioPerfil>)
                                {
                                    <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(item2.Imagen))" style="max-width:100%; height:250px;" />
                                    <br />
                                    <p class="text-center">@item2.NombreImagen</p>
                                }
                            }
                            else
                            {
                                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin" class="rounded-circle" width="150">
                            }

                            <div class="mt-3">
                                <h4>@item.NombreUsuario</h4>
                                <p class="text-secondary mb-1">@ViewBag.referenciatituloperfilUsuario</p>
                                <p class="text-muted font-size-sm">@ViewBag.referenciaDetallePerfil</p>

                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="card mt-3">
                    <p><h3 class="text-center">Curriculum usuario</h3></p>
                    <div class="col-md-12">
                        @if (ViewBag.ReferenciaUrlCV != null && ViewBag.ReferenciaUrlCV != "")
                        {
                            <div class="primary dspl-inline-block btn btn-block" style="margin-bottom:20px;">
                                <i class="fas fa-file-pdf fa-2x" style="margin-right:5px; color:#fff;">&nbsp;</i>
                                <span style="display: inline-block; margin-top: -4px;">
                                    <i style="font-size: 14px; font-style: normal; display: block; color:#fff; margin-bottom: -8px;">
                                        @ViewBag.ReferenciaDocumento
                                    </i>
                                    <span style="display: inline-block; margin-top: 10px;">

                                        <a href="@ViewBag.ReferenciaUrlCV" id="downloadCV" title="Descargar" style="color:#fff;">
                                            <i class="fas fa-file-download" style="display: inline; font-size:18px; cursor:pointer; margin: 5px;"> </i>
                                        </a>

                                    </span>
                                </span>
                            </div>
                        }
                        else
                        {
                            <p class="text-center"><h6 class="text-center">No se ha encontrado curriculum</h6></p>
                        }

                        <br />
                    </div>

                </div>
            </div>
            <div class="col-md-8">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Rut Usuario</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                @item.RutUsuario
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Nombre Completo</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                @item.NombreUsuario @item.ApellidoPUsuario @item.ApellidoMUsuario
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Correo</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                @item.CorreoUsuario
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-3">
                                <h6 class="mb-0">Teléfono</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                                @item.TelefonoUsuario
                            </div>
                        </div>
                        <hr>

                    </div>
                </div>
                <hr />
                <div class="row gutters-sm">
                    <div class="col-sm-6 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">Habilidades</i></h6>
                                @if (ViewBag.ReferenciaHabilidadesUsuario.Count > 0)
                                {
                                    <ul style="list-style:none;">
                                        @foreach (var hab in ViewBag.ReferenciaHabilidadesUsuario as ICollection<Model.Models.HabilidadesUsuario>)
                                        {
                                            <li>@hab.HabilidadNombre</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <div class="error-template">
                                        <div class="error-details">
                                            <h4>No hay descripción de habilidades.</h4>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">Experiencias</i></h6>
                                @if (ViewBag.ReferenciaExperienciasUsuario.Count > 0)
                                {
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Nombre Empresa</th>
                                                <th>Descripcion de la empresa</th>
                                                <th>Fecha</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var exp in ViewBag.ReferenciaExperienciasUsuario as ICollection
                                            <Model.Models.ExperienciaUsuario>
                                                )
                                            {
                                                <tr>
                                                    <td>@exp.Nombre</td>
                                                    <td>@exp.Descripcion</td>
                                                    <td>@exp.Fecha_Inicio</td>

                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                                else
                                {
                                    <div class="error-template">
                                        <div class="error-details">
                                            <h4>No hay experiencias de empleos anteriores.</h4>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row gutters-sm">
                    <div class="col-sm-6 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">Educacion</i></h6>
                                @if (ViewBag.ReferenciaEducacionUsuario.Count > 0)
                                {
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Titulo</th>
                                                <th>Fecha</th>
                                                <th>Institución</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var edu in ViewBag.ReferenciaEducacionUsuario as ICollection
                                            <Model.Models.EducacionUsuario>
                                                )
                                            {
                                                <tr>
                                                    <td>@edu.TituloEducacion</td>
                                                    <td>@edu.FechaDesdeEducacion</td>
                                                    <td>@edu.InstitucionEducacion</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                }
                                else
                                {
                                    <div class="error-template">
                                        <div class="error-details">
                                            <h4>No hay descripción de estudios.</h4>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">Idiomas</i></h6>
                                @if (ViewBag.ReferenciaIdiomasUsuario.Count > 0)
                                {
                                    <ul style="list-style:none;">
                                        @foreach (var idiomas in ViewBag.ReferenciaIdiomasUsuario as ICollection<Model.Models.IdiomasUsuario>)
                                        {
                                            <li>
                                                @idiomas.NombreIdioma - Nivel:
                                                @if (idiomas.NivelIdioma == "0")
                                                {
                                                    <b>Bajo</b>
                                                }
                                                else if (idiomas.NivelIdioma == "1")
                                                {
                                                    <b>Medio</b>
                                                }
                                                else if (idiomas.NivelIdioma == "2")
                                                {
                                                    <b>Alto</b>
                                                }
                                                else if (idiomas.NivelIdioma == "3")
                                                {
                                                    <b>Nativo</b>
                                                }
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <div class="error-template">
                                        <div class="error-details">
                                            <h4>No hay descripción de idiomas.</h4>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    <hr />
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-12">
                    <h4>Resultados del test / <a href="@Url.Action("DetalleTestUsuario","Empresa", new { idUsuario = ViewBag.referenciaIdUsuario })">Ver detalle del test</a></h4>
                </div>
            </div>
            <div class="col-md-12 d-inline-flex">
                <div class="col-md-4">
                    <canvas id="myChartResponsabilidad"></canvas>
                </div>
                <div class="col-md-4">
                    <canvas id="myChartAutogestion"></canvas>
                </div>
                <div class="col-md-4">
                    <canvas id="myChartLiderazgo"></canvas>
                </div>
            </div>

        </div>
    </div>
    <hr />
    <div class="row">

        <div class="col-md-12">
            @if (ViewBag.DetallePreguntasRespuestas.Count > 0)
            {
                <h3>Respuestas a las postulaciones realizadas</h3>
                <table class="table table-condensed">
                    <thead>
                        <tr>
                            <th>Publicacion</th>
                            <th>Disponibilidad</th>
                            <th>Sueldo Liquido</th>
                            <th>Descripcion</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemRespuestas in ViewBag.DetallePreguntasRespuestas as ICollection<Model.Models.DetallePreguntasRespuestas>
                   )
                        {
                            <tr>
                                <td>@itemRespuestas.nombrePublicacion</td>
                                <td>@itemRespuestas.Disponibilidad</td>
                                <td>@itemRespuestas.Sueldo</td>
                                <td>@itemRespuestas.Descripcion</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="error-template">

                    <div class="error-details">
                        <h4>   No hay se encontró detalle de las preguntas</h4>

                    </div>

                </div>
            }



        </div>
    </div>

}

<script type="text/javascript">
                var Responsabilidad = @Html.Raw(Json.Encode(ViewBag.referenciaResponsabilidad));
                var RestoResponsabilidad = @Html.Raw(Json.Encode(ViewBag.referenciaRestoResponsabilidad));
                var AutoGestion = @Html.Raw(Json.Encode(ViewBag.referenciaAutoGestion));
                var RestoAutoGestion = @Html.Raw(Json.Encode(ViewBag.referenciaRestoAutogestion));
                var Liderazgo = @Html.Raw(Json.Encode(ViewBag.referenciaLiderazgo));
                var RestoLiderazgo = @Html.Raw(Json.Encode(ViewBag.referenciaRestoLiderazgo));
                var respon = Responsabilidad.replace(',', '.');
                var restorespon = RestoResponsabilidad.replace(',', '.');
                var autoges = AutoGestion.replace(',', '.');
                var restoautoges = RestoAutoGestion.replace(',', '.');
                var lideraz = Liderazgo.replace(',', '.');
                var restolideraz = RestoLiderazgo.replace(',', '.');
                let ctx = document.getElementById("myChartResponsabilidad").getContext('2d');
                let ctx1 = document.getElementById("myChartAutogestion").getContext('2d');
                let ctx2 = document.getElementById("myChartLiderazgo").getContext('2d');
                let labelsrespo = ['Responsabilidad ' + respon + ' %', 'No Responsabilidad ' + restorespon + ' %'];
                let colorHexrespo = ['#FF702D', '#FFD2BD'];

                let labelsges = ['AutoGestion ' + autoges + ' %', 'No AutoGestion ' + restoautoges + ' %'];
                let colorHexges = ['#FF702D', '#FFD2BD'];

                let labelslider = ['Liderazgo ' + lideraz + ' %', 'No Liderazgo ' + restolideraz + ' %'];
                let colorHexlider = ['#FF702D', '#FFD2BD'];

                // Responsabilidad
                let myChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                            data: [respon, restorespon],
                            backgroundColor: colorHexrespo
                        }],
                        labels: labelsrespo
                    },
                    options: {
                        responsive: true,
                        legend: {
                            position: 'bottom'
                        },
                        plugins: {
                            datalabels: {
                                color: '#fff',
                                anchor: 'end',
                                align: 'start',
                                offset: -10,
                                borderWidth: 2,
                                borderColor: '#fff',
                                borderRadius: 25,
                                backgroundColor: (context) => {
                                    return context.dataset.backgroundColor;
                                },
                                font: {
                                    weight: 'bold',
                                    size: '10'
                                },
                                formatter: (value) => {
                                    return value + ' %';
                                }
                            }
                        }
                    }
                });

                // Autogestion
                let myChart2 = new Chart(ctx1, {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                            data: [autoges, restoautoges],
                            backgroundColor: colorHexges
                        }],
                        labels: labelsges
                    },
                    options: {
                        responsive: true,
                        legend: {
                            position: 'bottom'
                        },
                        plugins: {
                            datalabels: {
                                color: '#fff',
                                anchor: 'end',
                                align: 'start',
                                offset: -10,
                                borderWidth: 2,
                                borderColor: '#fff',
                                borderRadius: 25,
                                backgroundColor: (context) => {
                                    return context.dataset.backgroundColor;
                                },
                                font: {
                                    weight: 'bold',
                                    size: '10'
                                },
                                formatter: (value) => {
                                    return value + ' %';
                                }
                            }
                        }
                    }
                });

                // liderazgo
                let myChart3 = new Chart(ctx2, {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                            data: [lideraz, restolideraz],
                            backgroundColor: colorHexlider
                        }],
                        labels: labelslider
                    },
                    options: {
                        responsive: true,
                        legend: {
                            position: 'bottom'
                        },
                        plugins: {
                            datalabels: {
                                color: '#fff',
                                anchor: 'end',
                                align: 'start',
                                offset: -10,
                                borderWidth: 2,
                                borderColor: '#fff',
                                borderRadius: 25,
                                backgroundColor: (context) => {
                                    return context.dataset.backgroundColor;
                                },
                                font: {
                                    weight: 'bold',
                                    size: '10'
                                },
                                formatter: (value) => {
                                    return value + ' %';
                                }
                            }
                        }
                    }
                });
</script>